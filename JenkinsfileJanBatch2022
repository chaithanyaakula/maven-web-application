
def sendSlackNotifications(String buildStatus = 'STARTED') {
    // Build status of null means success.
    buildStatus = buildStatus ?: 'SUCCESS'

// Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
  
    def color

    if (buildStatus == 'STARTED') {
        color = '#D4DADF'
    } else if (buildStatus == 'SUCCESS') {
        color = '#BDFFC3'
    } else if (buildStatus == 'UNSTABLE') {
        color = '#FFFE89'
    } else {
        color = '#FF9FA1'
    }

    def msg = "${buildStatus}: `${env.JOB_NAME}` #${env.BUILD_NUMBER}:\n${env.BUILD_URL}"

    slackSend(color: color, message: msg)
}

node {
    try {
        sendSlackNotifications()

        // Existing build steps.
    } catch (e) {
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
        sendSlackNotifications(currentBuild.result)
    }
}


node{

buildName 'Dev - $(BUILD_NUMBER)'
buildDescription 'Pipeline Script -  Scriptedway'
def mavenHome = tool name: "maven3.8.5"

echo "The Node name is:  ${env.NODE_NAME} "
echo "The Node name is:  ${env.JOB_NAME} "
echo "The Node name is:  ${env.BUILD_NUMBER} "

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])

try{
//Checkout Stage
stage('CheckoutCode'){
buildName 'Dev - $(env.BUILD_NUMBER)'
git branch: 'development', credentialsId: 'e1411605-2c4b-4384-bad4-9b0cc171c9e5',url: 
'https://github.com/chaithanyaakula/maven-web-application.git'
}

//Build Stage
stage('Build'){
sh "$mavenHome/bin/mvn clean package"
}

/*
//generate sonarqube report
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//upload artifact into artifactory repo
stage('UploadArtifactsIntoNexus'){
sh "$mavenHome/bin/mvn deploy"
}

//deploy app into tomcat server
stage('DeployAppIntoTomcat'){
    sshagent(['d05cc936-03b8-4b18-b362-c5f482e27d36']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@15.207.86.171:/opt/apache-tomcat-9.0.60/webapps"
}
} 
*/
}//try block closing
catch(e){
currentBuild.result = "FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//Node Closing
